{"remainingRequest":"/home/marco/tests/books1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/marco/tests/books1/src/components/Book.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/marco/tests/books1/src/components/Book.vue","mtime":1610900586080},{"path":"/home/marco/tests/books1/node_modules/cache-loader/dist/cjs.js","mtime":1611077702749},{"path":"/home/marco/tests/books1/node_modules/vue-loader/lib/index.js","mtime":1611077703296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAiQC9zZXJ2aWNlL2FwaVNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkJvb2siLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBib29rUmVnaXN0cmF0aW9uOiB7CiAgICAgICAgYm9va25hbWU6ICIiLAogICAgICAgIGlzYm46ICIiLAogICAgICAgIGF1dGhvcklkOiAiIiwKICAgICAgfSwKICAgICAgYXV0aG9yczogW10sCiAgICAgIGJvb2tzOiBbXSwKICAgICAgZWRpdGluZ0lkIDogMCwKICAgICAgcmVzcG9uc2VTdWNjZXNzOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNyZWF0ZUJvb2s6IGFzeW5jIGZ1bmN0aW9uKCkgewogICAgICBjb25zdCBib29rUmVxdWVzdCA9IHsKICAgICAgICBuYW1lOiB0aGlzLmJvb2tSZWdpc3RyYXRpb24uYm9va25hbWUsCiAgICAgICAgaXNibjogdGhpcy5ib29rUmVnaXN0cmF0aW9uLmlzYm4sCiAgICAgICAgYXV0aG9ySWQ6IHRoaXMuYm9va1JlZ2lzdHJhdGlvbi5hdXRob3JJZCwKICAgICAgfTsKICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGFwaS5jcmVhdGVCb29rKGJvb2tSZXF1ZXN0KTsKICAgICAgdGhpcy5ib29rUmVnaXN0cmF0aW9uLmJvb2tuYW1lID0gIiI7CiAgICAgIHRoaXMuYm9va1JlZ2lzdHJhdGlvbi5pc2JuID0gIiI7CiAgICAgIHRoaXMuYm9va1JlZ2lzdHJhdGlvbi5hdXRob3JJZCA9ICIiOwogICAgICB0aGlzLnJlYWRCb29rcygpOwogICAgICB0aGlzLnJlc3BvbnNlU3VjY2VzcyA9IHRydWU7CiAgICB9LAogICAgcmVhZEF1dGhvcnM6IGFzeW5jIGZ1bmN0aW9uKCkgewogICAgICBjb25zdCBkYXRhID0gYXdhaXQgYXBpLnJlYWRBdXRob3JzKCk7CiAgICAgIHRoaXMuYXV0aG9ycyA9IGRhdGE7CiAgICB9LAogICAgcmVhZEJvb2tzOiBhc3luYyBmdW5jdGlvbigpIHsKICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGFwaS5yZWFkQm9va3MoKTsKICAgICAgdGhpcy5ib29rcyA9IGRhdGE7CiAgICB9LAogICAgZGVsZXRlQm9vazogYXN5bmMgZnVuY3Rpb24oYm9va0lkKSB7CiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBhcGkuZGVsZXRlQm9vayhib29rSWQpOwogICAgICB0aGlzLnJlYWRCb29rcygpOwogICAgfSwKICAgIGluaXRpYXRlRWRpdDogYXN5bmMgZnVuY3Rpb24gKGJvb2tJZCkgewogICAgICB0aGlzLmVkaXRpbmdJZCA9IGJvb2tJZDsKICAgICAgY29uc3QgYm9va0RhdGEgPSBhd2FpdCBhcGkucmVhZEJvb2sodGhpcy5lZGl0aW5nSWQpOwogICAgICB0aGlzLmJvb2tSZWdpc3RyYXRpb24uYm9va25hbWUgPSBib29rRGF0YS5uYW1lOwogICAgICB0aGlzLmJvb2tSZWdpc3RyYXRpb24uaXNibiA9IGJvb2tEYXRhLmlzYm47CiAgICAgIHRoaXMuYm9va1JlZ2lzdHJhdGlvbi5hdXRob3JJZCA9IGJvb2tEYXRhLmF1dGhvci5pZDsKICAgIH0sCiAgICBlZGl0Qm9vayA6IGFzeW5jIGZ1bmN0aW9uICgpIHsKICAgICAgY29uc29sZS5sb2coIkVkaXRpbmcgOiAiK3RoaXMuZWRpdGluZ0lkKQogICAgICBjb25zdCBib29rUmVxdWVzdCA9IHsKICAgICAgICBuYW1lOiB0aGlzLmJvb2tSZWdpc3RyYXRpb24uYm9va25hbWUsCiAgICAgICAgaXNibjogdGhpcy5ib29rUmVnaXN0cmF0aW9uLmlzYm4sCiAgICAgICAgYXV0aG9ySWQ6IHRoaXMuYm9va1JlZ2lzdHJhdGlvbi5hdXRob3JJZCwKICAgICAgfTsKICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGFwaS51cGRhdGVCb29rKHRoaXMuZWRpdGluZ0lkLCBib29rUmVxdWVzdCk7CiAgICAgIHRoaXMuYm9va1JlZ2lzdHJhdGlvbi5ib29rbmFtZSA9ICIiOwogICAgICB0aGlzLmJvb2tSZWdpc3RyYXRpb24uaXNibiA9ICIiOwogICAgICB0aGlzLmJvb2tSZWdpc3RyYXRpb24uYXV0aG9ySWQgPSAiIjsKICAgICAgdGhpcy5lZGl0aW5nSWQgPSAwOwogICAgICB0aGlzLnJlYWRCb29rcygpOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMucmVhZEF1dGhvcnMoKTsKICAgIHRoaXMucmVhZEJvb2tzKCk7CiAgfSwKfTsK"},{"version":3,"sources":["Book.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Book.vue","sourceRoot":"src/components","sourcesContent":["<template>\n <v-container>\n    <h1>Book Management UI</h1>\n    <p>This UI developed to handle Book Registration and Edits</p>\n    <v-row>\n      <v-col sm=\"12\">\n        <v-alert v-if=\"responseSuccess\" dense text type=\"success\">\n          You have successfully added book.\n        </v-alert>\n      </v-col>\n      <v-col sm=\"6\">\n        <h3>Book Registration</h3>\n        <v-text-field\n          v-model=\"bookRegistration.bookname\"\n          label=\"Name\"\n        ></v-text-field>\n        <v-text-field\n          v-model=\"bookRegistration.isbn\"\n          label=\"ISBN\"\n        ></v-text-field>\n        <v-autocomplete\n          :items=\"authors\"\n          color=\"white\"\n          item-value=\"id\"\n          item-text=\"firstName\"\n          label=\"Author\"\n          v-model=\"bookRegistration.authorId\"\n        ></v-autocomplete>\n      \n        <v-btn v-if=\"editingId\" color=\"success\" v-on:click=\"editBook\">\n          Edit\n        </v-btn>\n        <v-btn v-else color=\"primary\" v-on:click=\"createBook\">\n          Register\n        </v-btn>\n      </v-col>\n      <v-col sm=\"6\">\n        <h3>Registered Books</h3>\n        <v-simple-table>\n          <template v-slot:default>\n            <thead>\n              <tr>\n                <th class=\"text-left\">\n                  ID\n                </th>\n                <th class=\"text-left\">\n                  First Name\n                </th>\n                <th class=\"text-left\">\n                  Last Name\n                </th>\n                <th class=\"text-left\">\n                  Action\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"book in books\" :key=\"book.id\">\n                <td>{{ book.id }}</td>\n                <td>{{ book.name }}</td>\n                <td>{{ book.isbn }}</td>\n                <td>\n                  <v-btn icon color=\"pink\" v-on:click=\"deleteBook(book.id)\">\n                    <v-icon>mdi-delete</v-icon>\n                  </v-btn>\n                  <v-btn icon color=\"blue\" v-on:click=\"initiateEdit(book.id)\">\n                    <v-icon>mdi-pencil-box-outline</v-icon>\n                  </v-btn>\n                </td>\n              </tr>\n            </tbody>\n          </template>\n        </v-simple-table>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\nimport api from \"@/service/apiService\";\nexport default {\n  name: \"Book\",\n  data() {\n    return {\n      bookRegistration: {\n        bookname: \"\",\n        isbn: \"\",\n        authorId: \"\",\n      },\n      authors: [],\n      books: [],\n      editingId : 0,\n      responseSuccess: false\n    };\n  },\n  methods: {\n    createBook: async function() {\n      const bookRequest = {\n        name: this.bookRegistration.bookname,\n        isbn: this.bookRegistration.isbn,\n        authorId: this.bookRegistration.authorId,\n      };\n      const data = await api.createBook(bookRequest);\n      this.bookRegistration.bookname = \"\";\n      this.bookRegistration.isbn = \"\";\n      this.bookRegistration.authorId = \"\";\n      this.readBooks();\n      this.responseSuccess = true;\n    },\n    readAuthors: async function() {\n      const data = await api.readAuthors();\n      this.authors = data;\n    },\n    readBooks: async function() {\n      const data = await api.readBooks();\n      this.books = data;\n    },\n    deleteBook: async function(bookId) {\n      const data = await api.deleteBook(bookId);\n      this.readBooks();\n    },\n    initiateEdit: async function (bookId) {\n      this.editingId = bookId;\n      const bookData = await api.readBook(this.editingId);\n      this.bookRegistration.bookname = bookData.name;\n      this.bookRegistration.isbn = bookData.isbn;\n      this.bookRegistration.authorId = bookData.author.id;\n    },\n    editBook : async function () {\n      console.log(\"Editing : \"+this.editingId)\n      const bookRequest = {\n        name: this.bookRegistration.bookname,\n        isbn: this.bookRegistration.isbn,\n        authorId: this.bookRegistration.authorId,\n      };\n      const data = await api.updateBook(this.editingId, bookRequest);\n      this.bookRegistration.bookname = \"\";\n      this.bookRegistration.isbn = \"\";\n      this.bookRegistration.authorId = \"\";\n      this.editingId = 0;\n      this.readBooks();\n    }\n  },\n  mounted() {\n    this.readAuthors();\n    this.readBooks();\n  },\n};\n</script>\n"]}]}
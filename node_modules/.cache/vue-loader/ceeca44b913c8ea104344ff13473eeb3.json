{"remainingRequest":"/home/marco/tests/books1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/marco/tests/books1/src/components/Author.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/marco/tests/books1/src/components/Author.vue","mtime":1610900586079},{"path":"/home/marco/tests/books1/node_modules/cache-loader/dist/cjs.js","mtime":1611077702749},{"path":"/home/marco/tests/books1/node_modules/vue-loader/lib/index.js","mtime":1611077703296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAiQC9zZXJ2aWNlL2FwaVNlcnZpY2UiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBdXRob3IiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyUmVnaXN0cmF0aW9uOiB7CiAgICAgICAgZmlyc3ROYW1lOiAiIiwKICAgICAgICBsYXN0TmFtZTogIiIsCiAgICAgIH0sCiAgICAgIHJlZ2lzdGVyZWRBdXRob3JzOiBbXSwKICAgICAgcmVzcG9uc2VTdWNjZXNzOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHJlYWRBdXRob3JzOiBhc3luYyBmdW5jdGlvbigpIHsKICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGFwaS5yZWFkQXV0aG9ycygpOwogICAgICB0aGlzLnJlZ2lzdGVyZWRBdXRob3JzID0gZGF0YTsKICAgIH0sCiAgICBjcmVhdGVBdXRob3I6IGFzeW5jIGZ1bmN0aW9uKCkgewogICAgICBjb25zdCByZXF1ZXN0RGF0YSA9IHsKICAgICAgICBmaXJzdE5hbWU6IHRoaXMudXNlclJlZ2lzdHJhdGlvbi5maXJzdE5hbWUsCiAgICAgICAgbGFzdE5hbWU6IHRoaXMudXNlclJlZ2lzdHJhdGlvbi5sYXN0TmFtZSwKICAgICAgfTsKICAgICAgYXdhaXQgYXBpLmNyZWF0ZUF1dGhvcihyZXF1ZXN0RGF0YSk7CiAgICAgIHRoaXMudXNlclJlZ2lzdHJhdGlvbi5maXJzdE5hbWUgPSAiIjsKICAgICAgdGhpcy51c2VyUmVnaXN0cmF0aW9uLmxhc3ROYW1lID0gIiI7CiAgICAgIHRoaXMucmVhZEF1dGhvcnMoKTsKICAgICAgdGhpcy5yZXNwb25zZVN1Y2Nlc3MgPSB0cnVlOwogICAgfSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLnJlYWRBdXRob3JzKCk7CiAgfSwKfTsK"},{"version":3,"sources":["Author.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Author.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<v-container>\n    <h1>Author Management UI</h1>\n    <p>This UI developed to handle Author Registration.</p>\n    <v-row>\n      <v-col sm=\"12\">\n        <v-alert v-if=\"responseSuccess\" dense text type=\"success\">\n          You have successfully added author.\n        </v-alert>\n      </v-col>\n      <v-col sm=\"6\">\n        <h3>Author Registration</h3>\n        <v-text-field\n          v-model=\"userRegistration.firstName\"\n          label=\"First name\"\n        ></v-text-field>\n        <v-text-field\n          v-model=\"userRegistration.lastName\"\n          label=\"Last name\"\n        ></v-text-field>\n        <v-btn color=\"primary\" v-on:click=\"createAuthor\">\n          Register\n        </v-btn>\n      </v-col>\n      <v-col sm=\"6\">\n        <h3>Registered Authors</h3>\n        <v-simple-table>\n          <template v-slot:default>\n            <thead>\n              <tr>\n                <th class=\"text-left\">\n                  ID\n                </th>\n                <th class=\"text-left\">\n                  First Name\n                </th>\n                <th class=\"text-left\">\n                  Last Name\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"author in registeredAuthors\" :key=\"author.id\">\n                <td>{{ author.id }}</td>\n                <td>{{ author.firstName }}</td>\n                <td>{{ author.lastName }}</td>\n              </tr>\n            </tbody>\n          </template>\n        </v-simple-table>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\nimport api from \"@/service/apiService\";\n\nexport default {\n  name: \"Author\",\n  data() {\n    return {\n      userRegistration: {\n        firstName: \"\",\n        lastName: \"\",\n      },\n      registeredAuthors: [],\n      responseSuccess: false\n    };\n  },\n  methods: {\n    readAuthors: async function() {\n      const data = await api.readAuthors();\n      this.registeredAuthors = data;\n    },\n    createAuthor: async function() {\n      const requestData = {\n        firstName: this.userRegistration.firstName,\n        lastName: this.userRegistration.lastName,\n      };\n      await api.createAuthor(requestData);\n      this.userRegistration.firstName = \"\";\n      this.userRegistration.lastName = \"\";\n      this.readAuthors();\n      this.responseSuccess = true;\n    },\n  },\n  mounted() {\n    this.readAuthors();\n  },\n};\n</script>\n"]}]}
{"remainingRequest":"/home/marco/tests/books1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/marco/tests/books1/src/components/Member.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/marco/tests/books1/src/components/Member.vue","mtime":1610900586080},{"path":"/home/marco/tests/books1/node_modules/cache-loader/dist/cjs.js","mtime":1611077702749},{"path":"/home/marco/tests/books1/node_modules/vue-loader/lib/index.js","mtime":1611077703296}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAiQC9zZXJ2aWNlL2FwaVNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk1lbWJlciIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1lbWJlclJlZ2lzdHJhdGlvbjogewogICAgICAgIGZpcnN0TmFtZTogIiIsCiAgICAgICAgbGFzdE5hbWU6ICIiLAogICAgICB9LAogICAgICByZWdpc3RlcmVkTWVtYmVyczogW10sCiAgICAgIHJlc3BvbnNlU3VjY2VzczogZmFsc2UsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcmVhZE1lbWJlcnM6IGFzeW5jIGZ1bmN0aW9uKCkgewogICAgICBjb25zdCBkYXRhID0gYXdhaXQgYXBpLnJlYWRNZW1iZXJzKCk7CiAgICAgIHRoaXMucmVnaXN0ZXJlZE1lbWJlcnMgPSBkYXRhOwogICAgfSwKICAgIGNyZWF0ZU1lbWJlcjogYXN5bmMgZnVuY3Rpb24oKSB7CiAgICAgIGNvbnN0IHJlcXVlc3REYXRhID0gewogICAgICAgIGZpcnN0TmFtZTogdGhpcy5tZW1iZXJSZWdpc3RyYXRpb24uZmlyc3ROYW1lLAogICAgICAgIGxhc3ROYW1lOiB0aGlzLm1lbWJlclJlZ2lzdHJhdGlvbi5sYXN0TmFtZSwKICAgICAgfTsKICAgICAgYXdhaXQgYXBpLmNyZWF0ZU1lbWJlcihyZXF1ZXN0RGF0YSk7CiAgICAgIHRoaXMubWVtYmVyUmVnaXN0cmF0aW9uLmZpcnN0TmFtZSA9ICIiOwogICAgICB0aGlzLm1lbWJlclJlZ2lzdHJhdGlvbi5sYXN0TmFtZSA9ICIiOwogICAgICB0aGlzLnJlYWRNZW1iZXJzKCk7CiAgICAgIHRoaXMucmVzcG9uc2VTdWNjZXNzID0gdHJ1ZTsKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5yZWFkTWVtYmVycygpOwogIH0sCn07Cg=="},{"version":3,"sources":["Member.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Member.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <h1>Member Management UI</h1>\n    <p>This UI developed to handle Member Registration.</p>\n    <v-row>\n      <v-col sm=\"12\">\n        <v-alert v-if=\"responseSuccess\" dense text type=\"success\">\n          You have successfully added member.\n        </v-alert>\n      </v-col>\n      <v-col sm=\"6\">\n        <h3>Member Registration</h3>\n        <v-text-field\n          v-model=\"memberRegistration.firstName\"\n          label=\"First name\"\n        ></v-text-field>\n        <v-text-field\n          v-model=\"memberRegistration.lastName\"\n          label=\"Last name\"\n        ></v-text-field>\n        <v-btn color=\"primary\" v-on:click=\"createMember\">\n          Register\n        </v-btn>\n      </v-col>\n      <v-col sm=\"6\">\n        <h3>Registered Members</h3>\n        <v-simple-table>\n          <template v-slot:default>\n            <thead>\n              <tr>\n                <th class=\"text-left\">\n                  ID\n                </th>\n                <th class=\"text-left\">\n                  First Name\n                </th>\n                <th class=\"text-left\">\n                  Last Name\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"member in registeredMembers\" :key=\"member.id\">\n                <td>{{ member.id }}</td>\n                <td>{{ member.firstName }}</td>\n                <td>{{ member.lastName }}</td>\n              </tr>\n            </tbody>\n          </template>\n        </v-simple-table>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\nimport api from \"@/service/apiService\";\nexport default {\n  name: \"Member\",\n  data() {\n    return {\n      memberRegistration: {\n        firstName: \"\",\n        lastName: \"\",\n      },\n      registeredMembers: [],\n      responseSuccess: false,\n    };\n  },\n  methods: {\n    readMembers: async function() {\n      const data = await api.readMembers();\n      this.registeredMembers = data;\n    },\n    createMember: async function() {\n      const requestData = {\n        firstName: this.memberRegistration.firstName,\n        lastName: this.memberRegistration.lastName,\n      };\n      await api.createMember(requestData);\n      this.memberRegistration.firstName = \"\";\n      this.memberRegistration.lastName = \"\";\n      this.readMembers();\n      this.responseSuccess = true;\n    },\n  },\n  mounted() {\n    this.readMembers();\n  },\n};\n</script>\n"]}]}